def parse_output(result):
    try:
        lineage = load_db2(result)
        lineage_data = []

        for column in lineage.get_column_lineage():
            try:
                object_db = result.get("SOURCEDB", None)
            except Exception:
                object_db = None
            
            try:
                object_schema = result.get("OBJECTSCHEMA", None)
            except Exception:
                object_schema = None

            try:
                object_name = result.get("OBJECTNAME", None)
            except Exception:
                object_name = None

            try:
                object_type = result.get("TYP", None)
            except Exception:
                object_type = None

            try:
                source_table = getattr(column[0].parent, "raw_name", None)
            except Exception:
                source_table = None

            try:
                source_column = getattr(column[0], "raw_name", None)
            except Exception:
                source_column = None

            try:
                source_schema = getattr(column[0].parent, "schema", None)
            except Exception:
                source_schema = None

            try:
                target_table = getattr(column[1].parent, "raw_name", None)
            except Exception:
                target_table = None

            try:
                target_column = getattr(column[1], "raw_name", None)
            except Exception:
                target_column = None

            try:
                target_schema = getattr(column[1].parent, "schema", None)
            except Exception:
                target_schema = None

            lineage_data.append({
                "objectDB": object_db,
                "objectSCHEMA": object_schema,
                "objectname": object_name,
                "type": object_type,
                "source_table": source_table,
                "source_column": source_column,
                "source_schema": source_schema,
                "target_table": target_table,
                "target_column": target_column,
                "target_schema": target_schema
            })

        return lineage_data
