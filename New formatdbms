import pandas as pd
import chromadb
from sentence_transformers import SentenceTransformer

# Load metadata from CSV (Assuming a CSV with 'Column Name', 'Table Name', 'Data Type')
def load_metadata(csv_path):
    df = pd.read_csv(csv_path)
    return df

# Initialize ChromaDB client
def initialize_vector_db():
    client = chromadb.PersistentClient(path="./vector_db")
    collection = client.get_or_create_collection(name="metadata")
    return client, collection

# Load SentenceTransformer model
embedding_model = SentenceTransformer("all-MiniLM-L6-v2")

def store_metadata_in_vector_db(df, collection):
    for index, row in df.iterrows():
        metadata_text = f"Column: {row['Column Name']}, Table: {row['Table Name']}, Type: {row['Data Type']}"
        embedding = embedding_model.encode(metadata_text).tolist()
        collection.add(ids=[str(index)], embeddings=[embedding], metadatas=[row.to_dict()])
    print("Metadata stored successfully in vector DB!")

# Query the vector DB to retrieve similar metadata
def query_metadata(query_text, collection, top_k=5):
    query_embedding = embedding_model.encode(query_text).tolist()
    results = collection.query(query_embeddings=[query_embedding], n_results=top_k)
    return results

if __name__ == "__main__":
    csv_path = "metadata.csv"  # Provide your metadata CSV file
    metadata_df = load_metadata(csv_path)
    client, collection = initialize_vector_db()
    store_metadata_in_vector_db(metadata_df, collection)
    
    # Example query
    query_text = "Find details about customer ID column"
    search_results = query_metadata(query_text, collection)
    print("Top matching metadata:", search_results)
